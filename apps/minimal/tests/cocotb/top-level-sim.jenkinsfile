def common_card_test_run(CARD_NAME) {
    try {
        sh """
        source venv-cocotb/bin/activate
        make -C apps/minimal/tests/cocotb CARD=$CARD_NAME SIM_FLAGS=\"-c -do quit\"
        """
    } catch (err) {
        echo "Error detected, firmware build failed!"
        currentBuild.result = 'FAILURE'
        currentStage.result = 'FAILURE'
        failed.add("$card_name")
    }

    junit allowEmptyResults: true, testResults: "apps/minimal/build/$CARD_NAME/results.xml"

    try {
        sh "test -f apps/minimal/build/$CARD_NAME/results.xml"
    } catch (err) {
        echo "Error detected, no tests performed (results missing)!"
        currentBuild.result = 'FAILURE'
        currentStage.result = 'FAILURE'
        failed.add("$card_name")
    }
}

def CARDS = ["alveo-u200", "alveo-u55c", "vcu118", "ia-420f", "n6010", "fb2cghh", "fb4cgg3", "nfb-200g2ql", "dk-dev-1sdx-p", "g35p"]

node("preklad") {
    cleanWs()
    checkout scm

    if (params.nightly != null && params.nightly == true) {
        stage("Prepare for nightly build") {
            sh "(cd extra/nfb-200g2ql; git checkout main)"
            sh "(cd extra/dma-medusa; git checkout main)"
        }
    }

    stage("Prepare environment") {
        sh """
            source ./env.sh
            ndk_fpga_venv_prepare "venv-cocotb"
            pip install apps/minimal/tests/cocotb
        """
    }

    def failed = []

    for(card_name in CARDS) {
        try {
            timeout(time: 1, unit: 'HOURS') {
                stage("Run test: $card_name") {
                    common_card_test_run(card_name)
                }
            }
        } catch(err) {
            echo "Error detected, test stage failed!"
            currentBuild.result = 'FAILURE'
            failed.add("$card_name")
        }
    }

    sh "rm -rf venv-cocotb"

    // send out emails if failure is detected
    if(currentBuild.result == "FAILURE") {
        println "FAILED on cards: ${failed}."
        emailext \
            recipientProviders: [culprits(), developers()],
            to: 'cabal@cesnet.cz, spinler@cesnet.cz, isa@cesnet.cz, kondys@cesnet.cz, friedl@cesnet.cz',
            subject: "[Jenkins] ${currentBuild.currentResult} ${env.JOB_NAME} #${currentBuild.number}",
            body: """\
                The build of the repository ${env.JOB_NAME} #${currentBuild.number} ends up with status ${currentBuild.currentResult} on cards: ${failed}. You can find build log in the attachments.

                For more details see ${env.BUILD_URL}.

                Yours sincerely
                Jenkins\
            """.stripIndent(),
            attachLog: true,
            compressLog: true
    }
}
